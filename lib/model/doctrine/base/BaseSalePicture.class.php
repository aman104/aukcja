<?php

/**
 * BaseSalePicture
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $sale_id
 * @property string $file
 * @property boolean $is_default
 * @property integer $position
 * @property Sale $Sale
 * 
 * @method integer     getSaleId()     Returns the current record's "sale_id" value
 * @method string      getFile()       Returns the current record's "file" value
 * @method boolean     getIsDefault()  Returns the current record's "is_default" value
 * @method integer     getPosition()   Returns the current record's "position" value
 * @method Sale        getSale()       Returns the current record's "Sale" value
 * @method SalePicture setSaleId()     Sets the current record's "sale_id" value
 * @method SalePicture setFile()       Sets the current record's "file" value
 * @method SalePicture setIsDefault()  Sets the current record's "is_default" value
 * @method SalePicture setPosition()   Sets the current record's "position" value
 * @method SalePicture setSale()       Sets the current record's "Sale" value
 * 
 * @package    aukcje
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSalePicture extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sale_picture');
        $this->hasColumn('sale_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('file', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_default', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('position', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Sale', array(
             'local' => 'sale_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}